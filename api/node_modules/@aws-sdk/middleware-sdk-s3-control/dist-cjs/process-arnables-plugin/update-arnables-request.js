"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateArnablesRequestMiddlewareOptions = exports.updateArnablesRequestMiddleware = void 0;
const protocol_http_1 = require("@smithy/protocol-http");
const constants_1 = require("../constants");
const getOutpostEndpoint_1 = require("./getOutpostEndpoint");
const ACCOUNT_ID_HEADER = "x-amz-account-id";
const OUTPOST_ID_HEADER = "x-amz-outpost-id";
const updateArnablesRequestMiddleware = (config) => (next, context) => async (args) => {
    const { request } = args;
    if (!protocol_http_1.HttpRequest.isInstance(request))
        return next(args);
    if (context[constants_1.CONTEXT_ACCOUNT_ID])
        request.headers[ACCOUNT_ID_HEADER] = context[constants_1.CONTEXT_ACCOUNT_ID];
    if (context[constants_1.CONTEXT_OUTPOST_ID]) {
        const { isCustomEndpoint } = config;
        const useFipsEndpoint = await config.useFipsEndpoint();
        request.headers[OUTPOST_ID_HEADER] = context[constants_1.CONTEXT_OUTPOST_ID];
        request.hostname = (0, getOutpostEndpoint_1.getOutpostEndpoint)(request.hostname, {
            isCustomEndpoint,
            regionOverride: context[constants_1.CONTEXT_ARN_REGION],
            useFipsEndpoint,
        });
    }
    return next(args);
};
exports.updateArnablesRequestMiddleware = updateArnablesRequestMiddleware;
exports.updateArnablesRequestMiddlewareOptions = {
    step: "build",
    name: "updateArnablesRequestMiddleware",
    tags: ["ACCOUNT_ID", "OUTPOST_ID", "OUTPOST"],
};
