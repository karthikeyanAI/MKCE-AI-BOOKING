import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@smithy/types";
import { GetAccessGrantsInstanceForPrefixRequest, GetAccessGrantsInstanceForPrefixResult } from "../models/models_0";
import { S3ControlClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../S3ControlClient";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link GetAccessGrantsInstanceForPrefixCommand}.
 */
export interface GetAccessGrantsInstanceForPrefixCommandInput extends GetAccessGrantsInstanceForPrefixRequest {
}
/**
 * @public
 *
 * The output of {@link GetAccessGrantsInstanceForPrefixCommand}.
 */
export interface GetAccessGrantsInstanceForPrefixCommandOutput extends GetAccessGrantsInstanceForPrefixResult, __MetadataBearer {
}
/**
 * @public
 * <p>Retrieve the S3 Access Grants instance that contains a particular prefix.  </p>
 *          <dl>
 *             <dt>Permissions</dt>
 *             <dd>
 *                <p>You must have the <code>s3:GetAccessGrantsInstanceForPrefix</code> permission for the caller account to use this operation. </p>
 *             </dd>
 *             <dt>Additional Permissions</dt>
 *             <dd>
 *                <p>The prefix owner account must grant you the following permissions to their S3 Access Grants instance: <code>s3:GetAccessGrantsInstanceForPrefix</code>. </p>
 *             </dd>
 *          </dl>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { S3ControlClient, GetAccessGrantsInstanceForPrefixCommand } from "@aws-sdk/client-s3-control"; // ES Modules import
 * // const { S3ControlClient, GetAccessGrantsInstanceForPrefixCommand } = require("@aws-sdk/client-s3-control"); // CommonJS import
 * const client = new S3ControlClient(config);
 * const input = { // GetAccessGrantsInstanceForPrefixRequest
 *   AccountId: "STRING_VALUE",
 *   S3Prefix: "STRING_VALUE", // required
 * };
 * const command = new GetAccessGrantsInstanceForPrefixCommand(input);
 * const response = await client.send(command);
 * // { // GetAccessGrantsInstanceForPrefixResult
 * //   AccessGrantsInstanceArn: "STRING_VALUE",
 * //   AccessGrantsInstanceId: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param GetAccessGrantsInstanceForPrefixCommandInput - {@link GetAccessGrantsInstanceForPrefixCommandInput}
 * @returns {@link GetAccessGrantsInstanceForPrefixCommandOutput}
 * @see {@link GetAccessGrantsInstanceForPrefixCommandInput} for command's `input` shape.
 * @see {@link GetAccessGrantsInstanceForPrefixCommandOutput} for command's `response` shape.
 * @see {@link S3ControlClientResolvedConfig | config} for S3ControlClient's `config` shape.
 *
 * @throws {@link S3ControlServiceException}
 * <p>Base exception class for all service exceptions from S3Control service.</p>
 *
 */
export declare class GetAccessGrantsInstanceForPrefixCommand extends $Command<GetAccessGrantsInstanceForPrefixCommandInput, GetAccessGrantsInstanceForPrefixCommandOutput, S3ControlClientResolvedConfig> {
    readonly input: GetAccessGrantsInstanceForPrefixCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: GetAccessGrantsInstanceForPrefixCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: S3ControlClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetAccessGrantsInstanceForPrefixCommandInput, GetAccessGrantsInstanceForPrefixCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
