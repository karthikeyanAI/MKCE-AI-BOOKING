import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { S3ControlServiceException as __BaseException } from "./S3ControlServiceException";
export interface AbortIncompleteMultipartUpload {
  DaysAfterInitiation?: number;
}
export declare const OwnerOverride: {
  readonly Destination: "Destination";
};
export type OwnerOverride = (typeof OwnerOverride)[keyof typeof OwnerOverride];
export interface AccessControlTranslation {
  Owner: OwnerOverride | undefined;
}
export interface ListAccessGrantsInstanceEntry {
  AccessGrantsInstanceId?: string;
  AccessGrantsInstanceArn?: string;
  CreatedAt?: Date;
  IdentityCenterArn?: string;
}
export interface AccessGrantsLocationConfiguration {
  S3SubPrefix?: string;
}
export declare const GranteeType: {
  readonly DIRECTORY_GROUP: "DIRECTORY_GROUP";
  readonly DIRECTORY_USER: "DIRECTORY_USER";
  readonly IAM: "IAM";
};
export type GranteeType = (typeof GranteeType)[keyof typeof GranteeType];
export interface Grantee {
  GranteeType?: GranteeType;
  GranteeIdentifier?: string;
}
export declare const Permission: {
  readonly READ: "READ";
  readonly READWRITE: "READWRITE";
  readonly WRITE: "WRITE";
};
export type Permission = (typeof Permission)[keyof typeof Permission];
export interface ListAccessGrantEntry {
  CreatedAt?: Date;
  AccessGrantId?: string;
  AccessGrantArn?: string;
  Grantee?: Grantee;
  Permission?: Permission;
  AccessGrantsLocationId?: string;
  AccessGrantsLocationConfiguration?: AccessGrantsLocationConfiguration;
  GrantScope?: string;
  ApplicationArn?: string;
}
export interface ListAccessGrantsLocationsEntry {
  CreatedAt?: Date;
  AccessGrantsLocationId?: string;
  AccessGrantsLocationArn?: string;
  LocationScope?: string;
  IAMRoleArn?: string;
}
export declare const NetworkOrigin: {
  readonly Internet: "Internet";
  readonly VPC: "VPC";
};
export type NetworkOrigin = (typeof NetworkOrigin)[keyof typeof NetworkOrigin];
export interface VpcConfiguration {
  VpcId: string | undefined;
}
export interface AccessPoint {
  Name: string | undefined;
  NetworkOrigin: NetworkOrigin | undefined;
  VpcConfiguration?: VpcConfiguration;
  Bucket: string | undefined;
  AccessPointArn?: string;
  Alias?: string;
  BucketAccountId?: string;
}
export interface ActivityMetrics {
  IsEnabled?: boolean;
}
export interface AdvancedCostOptimizationMetrics {
  IsEnabled?: boolean;
}
export interface AdvancedDataProtectionMetrics {
  IsEnabled?: boolean;
}
export interface DetailedStatusCodesMetrics {
  IsEnabled?: boolean;
}
export interface SelectionCriteria {
  Delimiter?: string;
  MaxDepth?: number;
  MinStorageBytesPercentage?: number;
}
export interface PrefixLevelStorageMetrics {
  IsEnabled?: boolean;
  SelectionCriteria?: SelectionCriteria;
}
export interface PrefixLevel {
  StorageMetrics: PrefixLevelStorageMetrics | undefined;
}
export interface BucketLevel {
  ActivityMetrics?: ActivityMetrics;
  PrefixLevel?: PrefixLevel;
  AdvancedCostOptimizationMetrics?: AdvancedCostOptimizationMetrics;
  AdvancedDataProtectionMetrics?: AdvancedDataProtectionMetrics;
  DetailedStatusCodesMetrics?: DetailedStatusCodesMetrics;
}
export interface StorageLensGroupLevelSelectionCriteria {
  Include?: string[];
  Exclude?: string[];
}
export interface StorageLensGroupLevel {
  SelectionCriteria?: StorageLensGroupLevelSelectionCriteria;
}
export interface AccountLevel {
  ActivityMetrics?: ActivityMetrics;
  BucketLevel: BucketLevel | undefined;
  AdvancedCostOptimizationMetrics?: AdvancedCostOptimizationMetrics;
  AdvancedDataProtectionMetrics?: AdvancedDataProtectionMetrics;
  DetailedStatusCodesMetrics?: DetailedStatusCodesMetrics;
  StorageLensGroupLevel?: StorageLensGroupLevel;
}
export interface AssociateAccessGrantsIdentityCenterRequest {
  AccountId?: string;
  IdentityCenterArn: string | undefined;
}
export interface AsyncErrorDetails {
  Code?: string;
  Message?: string;
  Resource?: string;
  RequestId?: string;
}
export declare const AsyncOperationName: {
  readonly CreateMultiRegionAccessPoint: "CreateMultiRegionAccessPoint";
  readonly DeleteMultiRegionAccessPoint: "DeleteMultiRegionAccessPoint";
  readonly PutMultiRegionAccessPointPolicy: "PutMultiRegionAccessPointPolicy";
};
export type AsyncOperationName =
  (typeof AsyncOperationName)[keyof typeof AsyncOperationName];
export interface PublicAccessBlockConfiguration {
  BlockPublicAcls?: boolean;
  IgnorePublicAcls?: boolean;
  BlockPublicPolicy?: boolean;
  RestrictPublicBuckets?: boolean;
}
export interface Region {
  Bucket: string | undefined;
  BucketAccountId?: string;
}
export interface CreateMultiRegionAccessPointInput {
  Name: string | undefined;
  PublicAccessBlock?: PublicAccessBlockConfiguration;
  Regions: Region[] | undefined;
}
export interface DeleteMultiRegionAccessPointInput {
  Name: string | undefined;
}
export interface PutMultiRegionAccessPointPolicyInput {
  Name: string | undefined;
  Policy: string | undefined;
}
export interface AsyncRequestParameters {
  CreateMultiRegionAccessPointRequest?: CreateMultiRegionAccessPointInput;
  DeleteMultiRegionAccessPointRequest?: DeleteMultiRegionAccessPointInput;
  PutMultiRegionAccessPointPolicyRequest?: PutMultiRegionAccessPointPolicyInput;
}
export interface MultiRegionAccessPointRegionalResponse {
  Name?: string;
  RequestStatus?: string;
}
export interface MultiRegionAccessPointsAsyncResponse {
  Regions?: MultiRegionAccessPointRegionalResponse[];
}
export interface AsyncResponseDetails {
  MultiRegionAccessPointDetails?: MultiRegionAccessPointsAsyncResponse;
  ErrorDetails?: AsyncErrorDetails;
}
export interface AsyncOperation {
  CreationTime?: Date;
  Operation?: AsyncOperationName;
  RequestTokenARN?: string;
  RequestParameters?: AsyncRequestParameters;
  RequestStatus?: string;
  ResponseDetails?: AsyncResponseDetails;
}
export interface AwsLambdaTransformation {
  FunctionArn: string | undefined;
  FunctionPayload?: string;
}
export declare const S3PrefixType: {
  readonly Object: "Object";
};
export type S3PrefixType = (typeof S3PrefixType)[keyof typeof S3PrefixType];
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateAccessGrantRequest {
  AccountId?: string;
  AccessGrantsLocationId: string | undefined;
  AccessGrantsLocationConfiguration?: AccessGrantsLocationConfiguration;
  Grantee: Grantee | undefined;
  Permission: Permission | undefined;
  ApplicationArn?: string;
  S3PrefixType?: S3PrefixType;
  Tags?: Tag[];
}
export interface CreateAccessGrantResult {
  CreatedAt?: Date;
  AccessGrantId?: string;
  AccessGrantArn?: string;
  Grantee?: Grantee;
  AccessGrantsLocationId?: string;
  AccessGrantsLocationConfiguration?: AccessGrantsLocationConfiguration;
  Permission?: Permission;
  ApplicationArn?: string;
  GrantScope?: string;
}
export interface CreateAccessGrantsInstanceRequest {
  AccountId?: string;
  IdentityCenterArn?: string;
  Tags?: Tag[];
}
export interface CreateAccessGrantsInstanceResult {
  CreatedAt?: Date;
  AccessGrantsInstanceId?: string;
  AccessGrantsInstanceArn?: string;
  IdentityCenterArn?: string;
}
export interface CreateAccessGrantsLocationRequest {
  AccountId?: string;
  LocationScope: string | undefined;
  IAMRoleArn: string | undefined;
  Tags?: Tag[];
}
export interface CreateAccessGrantsLocationResult {
  CreatedAt?: Date;
  AccessGrantsLocationId?: string;
  AccessGrantsLocationArn?: string;
  LocationScope?: string;
  IAMRoleArn?: string;
}
export interface CreateAccessPointRequest {
  AccountId?: string;
  Name: string | undefined;
  Bucket: string | undefined;
  VpcConfiguration?: VpcConfiguration;
  PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
  BucketAccountId?: string;
}
export interface CreateAccessPointResult {
  AccessPointArn?: string;
  Alias?: string;
}
export declare const ObjectLambdaAllowedFeature: {
  readonly GetObjectPartNumber: "GetObject-PartNumber";
  readonly GetObjectRange: "GetObject-Range";
  readonly HeadObjectPartNumber: "HeadObject-PartNumber";
  readonly HeadObjectRange: "HeadObject-Range";
};
export type ObjectLambdaAllowedFeature =
  (typeof ObjectLambdaAllowedFeature)[keyof typeof ObjectLambdaAllowedFeature];
export declare const ObjectLambdaTransformationConfigurationAction: {
  readonly GetObject: "GetObject";
  readonly HeadObject: "HeadObject";
  readonly ListObjects: "ListObjects";
  readonly ListObjectsV2: "ListObjectsV2";
};
export type ObjectLambdaTransformationConfigurationAction =
  (typeof ObjectLambdaTransformationConfigurationAction)[keyof typeof ObjectLambdaTransformationConfigurationAction];
export type ObjectLambdaContentTransformation =
  | ObjectLambdaContentTransformation.AwsLambdaMember
  | ObjectLambdaContentTransformation.$UnknownMember;
export declare namespace ObjectLambdaContentTransformation {
  interface AwsLambdaMember {
    AwsLambda: AwsLambdaTransformation;
    $unknown?: never;
  }
  interface $UnknownMember {
    AwsLambda?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    AwsLambda: (value: AwsLambdaTransformation) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(
    value: ObjectLambdaContentTransformation,
    visitor: Visitor<T>
  ) => T;
}
export interface ObjectLambdaTransformationConfiguration {
  Actions: ObjectLambdaTransformationConfigurationAction[] | undefined;
  ContentTransformation: ObjectLambdaContentTransformation | undefined;
}
export interface ObjectLambdaConfiguration {
  SupportingAccessPoint: string | undefined;
  CloudWatchMetricsEnabled?: boolean;
  AllowedFeatures?: ObjectLambdaAllowedFeature[];
  TransformationConfigurations:
    | ObjectLambdaTransformationConfiguration[]
    | undefined;
}
export interface CreateAccessPointForObjectLambdaRequest {
  AccountId?: string;
  Name: string | undefined;
  Configuration: ObjectLambdaConfiguration | undefined;
}
export declare const ObjectLambdaAccessPointAliasStatus: {
  readonly PROVISIONING: "PROVISIONING";
  readonly READY: "READY";
};
export type ObjectLambdaAccessPointAliasStatus =
  (typeof ObjectLambdaAccessPointAliasStatus)[keyof typeof ObjectLambdaAccessPointAliasStatus];
export interface ObjectLambdaAccessPointAlias {
  Value?: string;
  Status?: ObjectLambdaAccessPointAliasStatus;
}
export interface CreateAccessPointForObjectLambdaResult {
  ObjectLambdaAccessPointArn?: string;
  Alias?: ObjectLambdaAccessPointAlias;
}
export declare class BucketAlreadyExists extends __BaseException {
  readonly name: "BucketAlreadyExists";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<BucketAlreadyExists, __BaseException>
  );
}
export declare class BucketAlreadyOwnedByYou extends __BaseException {
  readonly name: "BucketAlreadyOwnedByYou";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<BucketAlreadyOwnedByYou, __BaseException>
  );
}
export declare const BucketCannedACL: {
  readonly authenticated_read: "authenticated-read";
  readonly private: "private";
  readonly public_read: "public-read";
  readonly public_read_write: "public-read-write";
};
export type BucketCannedACL =
  (typeof BucketCannedACL)[keyof typeof BucketCannedACL];
export declare const BucketLocationConstraint: {
  readonly EU: "EU";
  readonly ap_northeast_1: "ap-northeast-1";
  readonly ap_south_1: "ap-south-1";
  readonly ap_southeast_1: "ap-southeast-1";
  readonly ap_southeast_2: "ap-southeast-2";
  readonly cn_north_1: "cn-north-1";
  readonly eu_central_1: "eu-central-1";
  readonly eu_west_1: "eu-west-1";
  readonly sa_east_1: "sa-east-1";
  readonly us_west_1: "us-west-1";
  readonly us_west_2: "us-west-2";
};
export type BucketLocationConstraint =
  (typeof BucketLocationConstraint)[keyof typeof BucketLocationConstraint];
export interface CreateBucketConfiguration {
  LocationConstraint?: BucketLocationConstraint;
}
export interface CreateBucketRequest {
  ACL?: BucketCannedACL;
  Bucket: string | undefined;
  CreateBucketConfiguration?: CreateBucketConfiguration;
  GrantFullControl?: string;
  GrantRead?: string;
  GrantReadACP?: string;
  GrantWrite?: string;
  GrantWriteACP?: string;
  ObjectLockEnabledForBucket?: boolean;
  OutpostId?: string;
}
export interface CreateBucketResult {
  Location?: string;
  BucketArn?: string;
}
export declare class BadRequestException extends __BaseException {
  readonly name: "BadRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<BadRequestException, __BaseException>
  );
}
export interface JobManifestLocation {
  ObjectArn: string | undefined;
  ObjectVersionId?: string;
  ETag: string | undefined;
}
export declare const JobManifestFieldName: {
  readonly Bucket: "Bucket";
  readonly Ignore: "Ignore";
  readonly Key: "Key";
  readonly VersionId: "VersionId";
};
export type JobManifestFieldName =
  (typeof JobManifestFieldName)[keyof typeof JobManifestFieldName];
export declare const JobManifestFormat: {
  readonly S3BatchOperations_CSV_20180820: "S3BatchOperations_CSV_20180820";
  readonly S3InventoryReport_CSV_20161130: "S3InventoryReport_CSV_20161130";
};
export type JobManifestFormat =
  (typeof JobManifestFormat)[keyof typeof JobManifestFormat];
export interface JobManifestSpec {
  Format: JobManifestFormat | undefined;
  Fields?: JobManifestFieldName[];
}
export interface JobManifest {
  Spec: JobManifestSpec | undefined;
  Location: JobManifestLocation | undefined;
}
export interface KeyNameConstraint {
  MatchAnyPrefix?: string[];
  MatchAnySuffix?: string[];
  MatchAnySubstring?: string[];
}
export declare const S3StorageClass: {
  readonly DEEP_ARCHIVE: "DEEP_ARCHIVE";
  readonly GLACIER: "GLACIER";
  readonly GLACIER_IR: "GLACIER_IR";
  readonly INTELLIGENT_TIERING: "INTELLIGENT_TIERING";
  readonly ONEZONE_IA: "ONEZONE_IA";
  readonly STANDARD: "STANDARD";
  readonly STANDARD_IA: "STANDARD_IA";
};
export type S3StorageClass =
  (typeof S3StorageClass)[keyof typeof S3StorageClass];
export declare const ReplicationStatus: {
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly NONE: "NONE";
  readonly REPLICA: "REPLICA";
};
export type ReplicationStatus =
  (typeof ReplicationStatus)[keyof typeof ReplicationStatus];
export interface JobManifestGeneratorFilter {
  EligibleForReplication?: boolean;
  CreatedAfter?: Date;
  CreatedBefore?: Date;
  ObjectReplicationStatuses?: ReplicationStatus[];
  KeyNameConstraint?: KeyNameConstraint;
  ObjectSizeGreaterThanBytes?: number;
  ObjectSizeLessThanBytes?: number;
  MatchAnyStorageClass?: S3StorageClass[];
}
export interface SSEKMSEncryption {
  KeyId: string | undefined;
}
export interface SSES3Encryption {}
export interface GeneratedManifestEncryption {
  SSES3?: SSES3Encryption;
  SSEKMS?: SSEKMSEncryption;
}
export declare const GeneratedManifestFormat: {
  readonly S3InventoryReport_CSV_20211130: "S3InventoryReport_CSV_20211130";
};
export type GeneratedManifestFormat =
  (typeof GeneratedManifestFormat)[keyof typeof GeneratedManifestFormat];
export interface S3ManifestOutputLocation {
  ExpectedManifestBucketOwner?: string;
  Bucket: string | undefined;
  ManifestPrefix?: string;
  ManifestEncryption?: GeneratedManifestEncryption;
  ManifestFormat: GeneratedManifestFormat | undefined;
}
export interface S3JobManifestGenerator {
  ExpectedBucketOwner?: string;
  SourceBucket: string | undefined;
  ManifestOutputLocation?: S3ManifestOutputLocation;
  Filter?: JobManifestGeneratorFilter;
  EnableManifestOutput: boolean | undefined;
}
export type JobManifestGenerator =
  | JobManifestGenerator.S3JobManifestGeneratorMember
  | JobManifestGenerator.$UnknownMember;
export declare namespace JobManifestGenerator {
  interface S3JobManifestGeneratorMember {
    S3JobManifestGenerator: S3JobManifestGenerator;
    $unknown?: never;
  }
  interface $UnknownMember {
    S3JobManifestGenerator?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    S3JobManifestGenerator: (value: S3JobManifestGenerator) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: JobManifestGenerator, visitor: Visitor<T>) => T;
}
export interface LambdaInvokeOperation {
  FunctionArn?: string;
  InvocationSchemaVersion?: string;
  UserArguments?: Record<string, string>;
}
export interface S3DeleteObjectTaggingOperation {}
export declare const S3GlacierJobTier: {
  readonly BULK: "BULK";
  readonly STANDARD: "STANDARD";
};
export type S3GlacierJobTier =
  (typeof S3GlacierJobTier)[keyof typeof S3GlacierJobTier];
export interface S3InitiateRestoreObjectOperation {
  ExpirationInDays?: number;
  GlacierJobTier?: S3GlacierJobTier;
}
export declare const S3GranteeTypeIdentifier: {
  readonly CANONICAL: "id";
  readonly EMAIL_ADDRESS: "emailAddress";
  readonly GROUP: "uri";
};
export type S3GranteeTypeIdentifier =
  (typeof S3GranteeTypeIdentifier)[keyof typeof S3GranteeTypeIdentifier];
export interface S3Grantee {
  TypeIdentifier?: S3GranteeTypeIdentifier;
  Identifier?: string;
  DisplayName?: string;
}
export declare const S3Permission: {
  readonly FULL_CONTROL: "FULL_CONTROL";
  readonly READ: "READ";
  readonly READ_ACP: "READ_ACP";
  readonly WRITE: "WRITE";
  readonly WRITE_ACP: "WRITE_ACP";
};
export type S3Permission = (typeof S3Permission)[keyof typeof S3Permission];
export interface S3Grant {
  Grantee?: S3Grantee;
  Permission?: S3Permission;
}
export interface S3ObjectOwner {
  ID?: string;
  DisplayName?: string;
}
export interface S3AccessControlList {
  Owner: S3ObjectOwner | undefined;
  Grants?: S3Grant[];
}
export declare const S3CannedAccessControlList: {
  readonly AUTHENTICATED_READ: "authenticated-read";
  readonly AWS_EXEC_READ: "aws-exec-read";
  readonly BUCKET_OWNER_FULL_CONTROL: "bucket-owner-full-control";
  readonly BUCKET_OWNER_READ: "bucket-owner-read";
  readonly PRIVATE: "private";
  readonly PUBLIC_READ: "public-read";
  readonly PUBLIC_READ_WRITE: "public-read-write";
};
export type S3CannedAccessControlList =
  (typeof S3CannedAccessControlList)[keyof typeof S3CannedAccessControlList];
export interface S3AccessControlPolicy {
  AccessControlList?: S3AccessControlList;
  CannedAccessControlList?: S3CannedAccessControlList;
}
export interface S3SetObjectAclOperation {
  AccessControlPolicy?: S3AccessControlPolicy;
}
export declare const S3ChecksumAlgorithm: {
  readonly CRC32: "CRC32";
  readonly CRC32C: "CRC32C";
  readonly SHA1: "SHA1";
  readonly SHA256: "SHA256";
};
export type S3ChecksumAlgorithm =
  (typeof S3ChecksumAlgorithm)[keyof typeof S3ChecksumAlgorithm];
export declare const S3MetadataDirective: {
  readonly COPY: "COPY";
  readonly REPLACE: "REPLACE";
};
export type S3MetadataDirective =
  (typeof S3MetadataDirective)[keyof typeof S3MetadataDirective];
export declare const S3SSEAlgorithm: {
  readonly AES256: "AES256";
  readonly KMS: "KMS";
};
export type S3SSEAlgorithm =
  (typeof S3SSEAlgorithm)[keyof typeof S3SSEAlgorithm];
export interface S3ObjectMetadata {
  CacheControl?: string;
  ContentDisposition?: string;
  ContentEncoding?: string;
  ContentLanguage?: string;
  UserMetadata?: Record<string, string>;
  ContentLength?: number;
  ContentMD5?: string;
  ContentType?: string;
  HttpExpiresDate?: Date;
  RequesterCharged?: boolean;
  SSEAlgorithm?: S3SSEAlgorithm;
}
export interface S3Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export declare const S3ObjectLockLegalHoldStatus: {
  readonly OFF: "OFF";
  readonly ON: "ON";
};
export type S3ObjectLockLegalHoldStatus =
  (typeof S3ObjectLockLegalHoldStatus)[keyof typeof S3ObjectLockLegalHoldStatus];
export declare const S3ObjectLockMode: {
  readonly COMPLIANCE: "COMPLIANCE";
  readonly GOVERNANCE: "GOVERNANCE";
};
export type S3ObjectLockMode =
  (typeof S3ObjectLockMode)[keyof typeof S3ObjectLockMode];
export interface S3CopyObjectOperation {
  TargetResource?: string;
  CannedAccessControlList?: S3CannedAccessControlList;
  AccessControlGrants?: S3Grant[];
  MetadataDirective?: S3MetadataDirective;
  ModifiedSinceConstraint?: Date;
  NewObjectMetadata?: S3ObjectMetadata;
  NewObjectTagging?: S3Tag[];
  RedirectLocation?: string;
  RequesterPays?: boolean;
  StorageClass?: S3StorageClass;
  UnModifiedSinceConstraint?: Date;
  SSEAwsKmsKeyId?: string;
  TargetKeyPrefix?: string;
  ObjectLockLegalHoldStatus?: S3ObjectLockLegalHoldStatus;
  ObjectLockMode?: S3ObjectLockMode;
  ObjectLockRetainUntilDate?: Date;
  BucketKeyEnabled?: boolean;
  ChecksumAlgorithm?: S3ChecksumAlgorithm;
}
export interface S3ObjectLockLegalHold {
  Status: S3ObjectLockLegalHoldStatus | undefined;
}
export interface S3SetObjectLegalHoldOperation {
  LegalHold: S3ObjectLockLegalHold | undefined;
}
export declare const S3ObjectLockRetentionMode: {
  readonly COMPLIANCE: "COMPLIANCE";
  readonly GOVERNANCE: "GOVERNANCE";
};
export type S3ObjectLockRetentionMode =
  (typeof S3ObjectLockRetentionMode)[keyof typeof S3ObjectLockRetentionMode];
export interface S3Retention {
  RetainUntilDate?: Date;
  Mode?: S3ObjectLockRetentionMode;
}
export interface S3SetObjectRetentionOperation {
  BypassGovernanceRetention?: boolean;
  Retention: S3Retention | undefined;
}
export interface S3SetObjectTaggingOperation {
  TagSet?: S3Tag[];
}
export interface S3ReplicateObjectOperation {}
export interface JobOperation {
  LambdaInvoke?: LambdaInvokeOperation;
  S3PutObjectCopy?: S3CopyObjectOperation;
  S3PutObjectAcl?: S3SetObjectAclOperation;
  S3PutObjectTagging?: S3SetObjectTaggingOperation;
  S3DeleteObjectTagging?: S3DeleteObjectTaggingOperation;
  S3InitiateRestoreObject?: S3InitiateRestoreObjectOperation;
  S3PutObjectLegalHold?: S3SetObjectLegalHoldOperation;
  S3PutObjectRetention?: S3SetObjectRetentionOperation;
  S3ReplicateObject?: S3ReplicateObjectOperation;
}
export declare const JobReportFormat: {
  readonly Report_CSV_20180820: "Report_CSV_20180820";
};
export type JobReportFormat =
  (typeof JobReportFormat)[keyof typeof JobReportFormat];
export declare const JobReportScope: {
  readonly AllTasks: "AllTasks";
  readonly FailedTasksOnly: "FailedTasksOnly";
};
export type JobReportScope =
  (typeof JobReportScope)[keyof typeof JobReportScope];
export interface JobReport {
  Bucket?: string;
  Format?: JobReportFormat;
  Enabled: boolean | undefined;
  Prefix?: string;
  ReportScope?: JobReportScope;
}
export interface CreateJobRequest {
  AccountId?: string;
  ConfirmationRequired?: boolean;
  Operation: JobOperation | undefined;
  Report: JobReport | undefined;
  ClientRequestToken?: string;
  Manifest?: JobManifest;
  Description?: string;
  Priority: number | undefined;
  RoleArn: string | undefined;
  Tags?: S3Tag[];
  ManifestGenerator?: JobManifestGenerator;
}
export interface CreateJobResult {
  JobId?: string;
}
export declare class IdempotencyException extends __BaseException {
  readonly name: "IdempotencyException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<IdempotencyException, __BaseException>
  );
}
export declare class InternalServiceException extends __BaseException {
  readonly name: "InternalServiceException";
  readonly $fault: "server";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InternalServiceException, __BaseException>
  );
}
export declare class TooManyRequestsException extends __BaseException {
  readonly name: "TooManyRequestsException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<TooManyRequestsException, __BaseException>
  );
}
export interface CreateMultiRegionAccessPointRequest {
  AccountId?: string;
  ClientToken?: string;
  Details: CreateMultiRegionAccessPointInput | undefined;
}
export interface CreateMultiRegionAccessPointResult {
  RequestTokenARN?: string;
}
export interface MatchObjectAge {
  DaysGreaterThan?: number;
  DaysLessThan?: number;
}
export interface MatchObjectSize {
  BytesGreaterThan?: number;
  BytesLessThan?: number;
}
export interface StorageLensGroupAndOperator {
  MatchAnyPrefix?: string[];
  MatchAnySuffix?: string[];
  MatchAnyTag?: S3Tag[];
  MatchObjectAge?: MatchObjectAge;
  MatchObjectSize?: MatchObjectSize;
}
export interface StorageLensGroupOrOperator {
  MatchAnyPrefix?: string[];
  MatchAnySuffix?: string[];
  MatchAnyTag?: S3Tag[];
  MatchObjectAge?: MatchObjectAge;
  MatchObjectSize?: MatchObjectSize;
}
export interface StorageLensGroupFilter {
  MatchAnyPrefix?: string[];
  MatchAnySuffix?: string[];
  MatchAnyTag?: S3Tag[];
  MatchObjectAge?: MatchObjectAge;
  MatchObjectSize?: MatchObjectSize;
  And?: StorageLensGroupAndOperator;
  Or?: StorageLensGroupOrOperator;
}
export interface StorageLensGroup {
  Name: string | undefined;
  Filter: StorageLensGroupFilter | undefined;
  StorageLensGroupArn?: string;
}
export interface CreateStorageLensGroupRequest {
  AccountId?: string;
  StorageLensGroup: StorageLensGroup | undefined;
  Tags?: Tag[];
}
export interface DeleteAccessGrantRequest {
  AccountId?: string;
  AccessGrantId: string | undefined;
}
export interface DeleteAccessGrantsInstanceRequest {
  AccountId?: string;
}
export interface DeleteAccessGrantsInstanceResourcePolicyRequest {
  AccountId?: string;
}
export interface DeleteAccessGrantsLocationRequest {
  AccountId?: string;
  AccessGrantsLocationId: string | undefined;
}
export interface DeleteAccessPointRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface DeleteAccessPointForObjectLambdaRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface DeleteAccessPointPolicyRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface DeleteAccessPointPolicyForObjectLambdaRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface DeleteBucketRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export interface DeleteBucketLifecycleConfigurationRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export interface DeleteBucketPolicyRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export interface DeleteBucketReplicationRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export interface DeleteBucketTaggingRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export interface DeleteJobTaggingRequest {
  AccountId?: string;
  JobId: string | undefined;
}
export interface DeleteJobTaggingResult {}
export declare class NotFoundException extends __BaseException {
  readonly name: "NotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(opts: __ExceptionOptionType<NotFoundException, __BaseException>);
}
export interface DeleteMultiRegionAccessPointRequest {
  AccountId?: string;
  ClientToken?: string;
  Details: DeleteMultiRegionAccessPointInput | undefined;
}
export interface DeleteMultiRegionAccessPointResult {
  RequestTokenARN?: string;
}
export interface DeletePublicAccessBlockRequest {
  AccountId?: string;
}
export interface DeleteStorageLensConfigurationRequest {
  ConfigId: string | undefined;
  AccountId?: string;
}
export interface DeleteStorageLensConfigurationTaggingRequest {
  ConfigId: string | undefined;
  AccountId?: string;
}
export interface DeleteStorageLensConfigurationTaggingResult {}
export interface DeleteStorageLensGroupRequest {
  Name: string | undefined;
  AccountId?: string;
}
export interface DescribeJobRequest {
  AccountId?: string;
  JobId: string | undefined;
}
export interface JobFailure {
  FailureCode?: string;
  FailureReason?: string;
}
export interface S3GeneratedManifestDescriptor {
  Format?: GeneratedManifestFormat;
  Location?: JobManifestLocation;
}
export interface JobTimers {
  ElapsedTimeInActiveSeconds?: number;
}
export interface JobProgressSummary {
  TotalNumberOfTasks?: number;
  NumberOfTasksSucceeded?: number;
  NumberOfTasksFailed?: number;
  Timers?: JobTimers;
}
export declare const JobStatus: {
  readonly Active: "Active";
  readonly Cancelled: "Cancelled";
  readonly Cancelling: "Cancelling";
  readonly Complete: "Complete";
  readonly Completing: "Completing";
  readonly Failed: "Failed";
  readonly Failing: "Failing";
  readonly New: "New";
  readonly Paused: "Paused";
  readonly Pausing: "Pausing";
  readonly Preparing: "Preparing";
  readonly Ready: "Ready";
  readonly Suspended: "Suspended";
};
export type JobStatus = (typeof JobStatus)[keyof typeof JobStatus];
export interface JobDescriptor {
  JobId?: string;
  ConfirmationRequired?: boolean;
  Description?: string;
  JobArn?: string;
  Status?: JobStatus;
  Manifest?: JobManifest;
  Operation?: JobOperation;
  Priority?: number;
  ProgressSummary?: JobProgressSummary;
  StatusUpdateReason?: string;
  FailureReasons?: JobFailure[];
  Report?: JobReport;
  CreationTime?: Date;
  TerminationDate?: Date;
  RoleArn?: string;
  SuspendedDate?: Date;
  SuspendedCause?: string;
  ManifestGenerator?: JobManifestGenerator;
  GeneratedManifestDescriptor?: S3GeneratedManifestDescriptor;
}
export interface DescribeJobResult {
  Job?: JobDescriptor;
}
export interface DescribeMultiRegionAccessPointOperationRequest {
  AccountId?: string;
  RequestTokenARN: string | undefined;
}
export interface DescribeMultiRegionAccessPointOperationResult {
  AsyncOperation?: AsyncOperation;
}
export interface DissociateAccessGrantsIdentityCenterRequest {
  AccountId?: string;
}
export interface GetAccessGrantRequest {
  AccountId?: string;
  AccessGrantId: string | undefined;
}
export interface GetAccessGrantResult {
  CreatedAt?: Date;
  AccessGrantId?: string;
  AccessGrantArn?: string;
  Grantee?: Grantee;
  Permission?: Permission;
  AccessGrantsLocationId?: string;
  AccessGrantsLocationConfiguration?: AccessGrantsLocationConfiguration;
  GrantScope?: string;
  ApplicationArn?: string;
}
export interface GetAccessGrantsInstanceRequest {
  AccountId?: string;
}
export interface GetAccessGrantsInstanceResult {
  AccessGrantsInstanceArn?: string;
  AccessGrantsInstanceId?: string;
  IdentityCenterArn?: string;
  CreatedAt?: Date;
}
export interface GetAccessGrantsInstanceForPrefixRequest {
  AccountId?: string;
  S3Prefix: string | undefined;
}
export interface GetAccessGrantsInstanceForPrefixResult {
  AccessGrantsInstanceArn?: string;
  AccessGrantsInstanceId?: string;
}
export interface GetAccessGrantsInstanceResourcePolicyRequest {
  AccountId?: string;
}
export interface GetAccessGrantsInstanceResourcePolicyResult {
  Policy?: string;
  Organization?: string;
  CreatedAt?: Date;
}
export interface GetAccessGrantsLocationRequest {
  AccountId?: string;
  AccessGrantsLocationId: string | undefined;
}
export interface GetAccessGrantsLocationResult {
  CreatedAt?: Date;
  AccessGrantsLocationId?: string;
  AccessGrantsLocationArn?: string;
  LocationScope?: string;
  IAMRoleArn?: string;
}
export interface GetAccessPointRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface GetAccessPointResult {
  Name?: string;
  Bucket?: string;
  NetworkOrigin?: NetworkOrigin;
  VpcConfiguration?: VpcConfiguration;
  PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
  CreationDate?: Date;
  Alias?: string;
  AccessPointArn?: string;
  Endpoints?: Record<string, string>;
  BucketAccountId?: string;
}
export interface GetAccessPointConfigurationForObjectLambdaRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface GetAccessPointConfigurationForObjectLambdaResult {
  Configuration?: ObjectLambdaConfiguration;
}
export interface GetAccessPointForObjectLambdaRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface GetAccessPointForObjectLambdaResult {
  Name?: string;
  PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
  CreationDate?: Date;
  Alias?: ObjectLambdaAccessPointAlias;
}
export interface GetAccessPointPolicyRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface GetAccessPointPolicyResult {
  Policy?: string;
}
export interface GetAccessPointPolicyForObjectLambdaRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface GetAccessPointPolicyForObjectLambdaResult {
  Policy?: string;
}
export interface GetAccessPointPolicyStatusRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface PolicyStatus {
  IsPublic?: boolean;
}
export interface GetAccessPointPolicyStatusResult {
  PolicyStatus?: PolicyStatus;
}
export interface GetAccessPointPolicyStatusForObjectLambdaRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface GetAccessPointPolicyStatusForObjectLambdaResult {
  PolicyStatus?: PolicyStatus;
}
export interface GetBucketRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export interface GetBucketResult {
  Bucket?: string;
  PublicAccessBlockEnabled?: boolean;
  CreationDate?: Date;
}
export interface GetBucketLifecycleConfigurationRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export interface LifecycleExpiration {
  Date?: Date;
  Days?: number;
  ExpiredObjectDeleteMarker?: boolean;
}
export interface LifecycleRuleAndOperator {
  Prefix?: string;
  Tags?: S3Tag[];
  ObjectSizeGreaterThan?: number;
  ObjectSizeLessThan?: number;
}
export interface LifecycleRuleFilter {
  Prefix?: string;
  Tag?: S3Tag;
  And?: LifecycleRuleAndOperator;
  ObjectSizeGreaterThan?: number;
  ObjectSizeLessThan?: number;
}
export interface NoncurrentVersionExpiration {
  NoncurrentDays?: number;
  NewerNoncurrentVersions?: number;
}
export declare const TransitionStorageClass: {
  readonly DEEP_ARCHIVE: "DEEP_ARCHIVE";
  readonly GLACIER: "GLACIER";
  readonly INTELLIGENT_TIERING: "INTELLIGENT_TIERING";
  readonly ONEZONE_IA: "ONEZONE_IA";
  readonly STANDARD_IA: "STANDARD_IA";
};
export type TransitionStorageClass =
  (typeof TransitionStorageClass)[keyof typeof TransitionStorageClass];
export interface NoncurrentVersionTransition {
  NoncurrentDays?: number;
  StorageClass?: TransitionStorageClass;
}
export declare const ExpirationStatus: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type ExpirationStatus =
  (typeof ExpirationStatus)[keyof typeof ExpirationStatus];
export interface Transition {
  Date?: Date;
  Days?: number;
  StorageClass?: TransitionStorageClass;
}
export interface LifecycleRule {
  Expiration?: LifecycleExpiration;
  ID?: string;
  Filter?: LifecycleRuleFilter;
  Status: ExpirationStatus | undefined;
  Transitions?: Transition[];
  NoncurrentVersionTransitions?: NoncurrentVersionTransition[];
  NoncurrentVersionExpiration?: NoncurrentVersionExpiration;
  AbortIncompleteMultipartUpload?: AbortIncompleteMultipartUpload;
}
export interface GetBucketLifecycleConfigurationResult {
  Rules?: LifecycleRule[];
}
export interface GetBucketPolicyRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export interface GetBucketPolicyResult {
  Policy?: string;
}
export interface GetBucketReplicationRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export declare const DeleteMarkerReplicationStatus: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type DeleteMarkerReplicationStatus =
  (typeof DeleteMarkerReplicationStatus)[keyof typeof DeleteMarkerReplicationStatus];
export interface DeleteMarkerReplication {
  Status: DeleteMarkerReplicationStatus | undefined;
}
export interface EncryptionConfiguration {
  ReplicaKmsKeyID?: string;
}
export interface ReplicationTimeValue {
  Minutes?: number;
}
export declare const MetricsStatus: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type MetricsStatus = (typeof MetricsStatus)[keyof typeof MetricsStatus];
export interface Metrics {
  Status: MetricsStatus | undefined;
  EventThreshold?: ReplicationTimeValue;
}
export declare const ReplicationTimeStatus: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type ReplicationTimeStatus =
  (typeof ReplicationTimeStatus)[keyof typeof ReplicationTimeStatus];
export interface ReplicationTime {
  Status: ReplicationTimeStatus | undefined;
  Time: ReplicationTimeValue | undefined;
}
export declare const ReplicationStorageClass: {
  readonly DEEP_ARCHIVE: "DEEP_ARCHIVE";
  readonly GLACIER: "GLACIER";
  readonly GLACIER_IR: "GLACIER_IR";
  readonly INTELLIGENT_TIERING: "INTELLIGENT_TIERING";
  readonly ONEZONE_IA: "ONEZONE_IA";
  readonly OUTPOSTS: "OUTPOSTS";
  readonly REDUCED_REDUNDANCY: "REDUCED_REDUNDANCY";
  readonly STANDARD: "STANDARD";
  readonly STANDARD_IA: "STANDARD_IA";
};
export type ReplicationStorageClass =
  (typeof ReplicationStorageClass)[keyof typeof ReplicationStorageClass];
export interface Destination {
  Account?: string;
  Bucket: string | undefined;
  ReplicationTime?: ReplicationTime;
  AccessControlTranslation?: AccessControlTranslation;
  EncryptionConfiguration?: EncryptionConfiguration;
  Metrics?: Metrics;
  StorageClass?: ReplicationStorageClass;
}
export declare const ExistingObjectReplicationStatus: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type ExistingObjectReplicationStatus =
  (typeof ExistingObjectReplicationStatus)[keyof typeof ExistingObjectReplicationStatus];
export interface ExistingObjectReplication {
  Status: ExistingObjectReplicationStatus | undefined;
}
export interface ReplicationRuleAndOperator {
  Prefix?: string;
  Tags?: S3Tag[];
}
export interface ReplicationRuleFilter {
  Prefix?: string;
  Tag?: S3Tag;
  And?: ReplicationRuleAndOperator;
}
export declare const ReplicaModificationsStatus: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type ReplicaModificationsStatus =
  (typeof ReplicaModificationsStatus)[keyof typeof ReplicaModificationsStatus];
export interface ReplicaModifications {
  Status: ReplicaModificationsStatus | undefined;
}
export declare const SseKmsEncryptedObjectsStatus: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type SseKmsEncryptedObjectsStatus =
  (typeof SseKmsEncryptedObjectsStatus)[keyof typeof SseKmsEncryptedObjectsStatus];
export interface SseKmsEncryptedObjects {
  Status: SseKmsEncryptedObjectsStatus | undefined;
}
export interface SourceSelectionCriteria {
  SseKmsEncryptedObjects?: SseKmsEncryptedObjects;
  ReplicaModifications?: ReplicaModifications;
}
export declare const ReplicationRuleStatus: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type ReplicationRuleStatus =
  (typeof ReplicationRuleStatus)[keyof typeof ReplicationRuleStatus];
export interface ReplicationRule {
  ID?: string;
  Priority?: number;
  Prefix?: string;
  Filter?: ReplicationRuleFilter;
  Status: ReplicationRuleStatus | undefined;
  SourceSelectionCriteria?: SourceSelectionCriteria;
  ExistingObjectReplication?: ExistingObjectReplication;
  Destination: Destination | undefined;
  DeleteMarkerReplication?: DeleteMarkerReplication;
  Bucket: string | undefined;
}
export interface ReplicationConfiguration {
  Role: string | undefined;
  Rules: ReplicationRule[] | undefined;
}
export interface GetBucketReplicationResult {
  ReplicationConfiguration?: ReplicationConfiguration;
}
export interface GetBucketTaggingRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export interface GetBucketTaggingResult {
  TagSet: S3Tag[] | undefined;
}
export interface GetBucketVersioningRequest {
  AccountId?: string;
  Bucket: string | undefined;
}
export declare const MFADeleteStatus: {
  readonly Disabled: "Disabled";
  readonly Enabled: "Enabled";
};
export type MFADeleteStatus =
  (typeof MFADeleteStatus)[keyof typeof MFADeleteStatus];
export declare const BucketVersioningStatus: {
  readonly Enabled: "Enabled";
  readonly Suspended: "Suspended";
};
export type BucketVersioningStatus =
  (typeof BucketVersioningStatus)[keyof typeof BucketVersioningStatus];
export interface GetBucketVersioningResult {
  Status?: BucketVersioningStatus;
  MFADelete?: MFADeleteStatus;
}
export declare const Privilege: {
  readonly Default: "Default";
  readonly Minimal: "Minimal";
};
export type Privilege = (typeof Privilege)[keyof typeof Privilege];
export interface GetDataAccessRequest {
  AccountId?: string;
  Target: string | undefined;
  Permission: Permission | undefined;
  DurationSeconds?: number;
  Privilege?: Privilege;
  TargetType?: S3PrefixType;
}
export interface Credentials {
  AccessKeyId?: string;
  SecretAccessKey?: string;
  SessionToken?: string;
  Expiration?: Date;
}
export interface GetDataAccessResult {
  Credentials?: Credentials;
  MatchedGrantTarget?: string;
}
export interface GetJobTaggingRequest {
  AccountId?: string;
  JobId: string | undefined;
}
export interface GetJobTaggingResult {
  Tags?: S3Tag[];
}
export interface GetMultiRegionAccessPointRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface RegionReport {
  Bucket?: string;
  Region?: string;
  BucketAccountId?: string;
}
export declare const MultiRegionAccessPointStatus: {
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly INCONSISTENT_ACROSS_REGIONS: "INCONSISTENT_ACROSS_REGIONS";
  readonly PARTIALLY_CREATED: "PARTIALLY_CREATED";
  readonly PARTIALLY_DELETED: "PARTIALLY_DELETED";
  readonly READY: "READY";
};
export type MultiRegionAccessPointStatus =
  (typeof MultiRegionAccessPointStatus)[keyof typeof MultiRegionAccessPointStatus];
export interface MultiRegionAccessPointReport {
  Name?: string;
  Alias?: string;
  CreatedAt?: Date;
  PublicAccessBlock?: PublicAccessBlockConfiguration;
  Status?: MultiRegionAccessPointStatus;
  Regions?: RegionReport[];
}
export interface GetMultiRegionAccessPointResult {
  AccessPoint?: MultiRegionAccessPointReport;
}
export interface GetMultiRegionAccessPointPolicyRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface EstablishedMultiRegionAccessPointPolicy {
  Policy?: string;
}
export interface ProposedMultiRegionAccessPointPolicy {
  Policy?: string;
}
export interface MultiRegionAccessPointPolicyDocument {
  Established?: EstablishedMultiRegionAccessPointPolicy;
  Proposed?: ProposedMultiRegionAccessPointPolicy;
}
export interface GetMultiRegionAccessPointPolicyResult {
  Policy?: MultiRegionAccessPointPolicyDocument;
}
export interface GetMultiRegionAccessPointPolicyStatusRequest {
  AccountId?: string;
  Name: string | undefined;
}
export interface GetMultiRegionAccessPointPolicyStatusResult {
  Established?: PolicyStatus;
}
export interface GetMultiRegionAccessPointRoutesRequest {
  AccountId?: string;
  Mrap: string | undefined;
}
export interface MultiRegionAccessPointRoute {
  Bucket?: string;
  Region?: string;
  TrafficDialPercentage: number | undefined;
}
export interface GetMultiRegionAccessPointRoutesResult {
  Mrap?: string;
  Routes?: MultiRegionAccessPointRoute[];
}
export interface GetPublicAccessBlockOutput {
  PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;
}
export interface GetPublicAccessBlockRequest {
  AccountId?: string;
}
export declare class NoSuchPublicAccessBlockConfiguration extends __BaseException {
  readonly name: "NoSuchPublicAccessBlockConfiguration";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<
      NoSuchPublicAccessBlockConfiguration,
      __BaseException
    >
  );
}
export interface GetStorageLensConfigurationRequest {
  ConfigId: string | undefined;
  AccountId?: string;
}
export interface StorageLensAwsOrg {
  Arn: string | undefined;
}
export interface CloudWatchMetrics {
  IsEnabled: boolean | undefined;
}
export interface SSEKMS {
  KeyId: string | undefined;
}
export interface SSES3 {}
export interface StorageLensDataExportEncryption {
  SSES3?: SSES3;
  SSEKMS?: SSEKMS;
}
export declare const Format: {
  readonly CSV: "CSV";
  readonly Parquet: "Parquet";
};
export type Format = (typeof Format)[keyof typeof Format];
export declare const OutputSchemaVersion: {
  readonly V_1: "V_1";
};
export type OutputSchemaVersion =
  (typeof OutputSchemaVersion)[keyof typeof OutputSchemaVersion];
export interface S3BucketDestination {
  Format: Format | undefined;
  OutputSchemaVersion: OutputSchemaVersion | undefined;
  AccountId?: string;
  Arn: string | undefined;
  Prefix?: string;
  Encryption?: StorageLensDataExportEncryption;
}
export interface StorageLensDataExport {
  S3BucketDestination?: S3BucketDestination;
  CloudWatchMetrics?: CloudWatchMetrics;
}
export interface _Exclude {
  Buckets?: string[];
  Regions?: string[];
}
export interface Include {
  Buckets?: string[];
  Regions?: string[];
}
export interface StorageLensConfiguration {
  Id: string | undefined;
  AccountLevel: AccountLevel | undefined;
  Include?: Include;
  Exclude?: _Exclude;
  DataExport?: StorageLensDataExport;
  IsEnabled: boolean | undefined;
  AwsOrg?: StorageLensAwsOrg;
  StorageLensArn?: string;
}
export interface GetStorageLensConfigurationResult {
  StorageLensConfiguration?: StorageLensConfiguration;
}
export interface GetStorageLensConfigurationTaggingRequest {
  ConfigId: string | undefined;
  AccountId?: string;
}
export interface StorageLensTag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface GetStorageLensConfigurationTaggingResult {
  Tags?: StorageLensTag[];
}
export interface GetStorageLensGroupRequest {
  Name: string | undefined;
  AccountId?: string;
}
export interface GetStorageLensGroupResult {
  StorageLensGroup?: StorageLensGroup;
}
export interface ListAccessGrantsRequest {
  AccountId?: string;
  NextToken?: string;
  MaxResults?: number;
  GranteeType?: GranteeType;
  GranteeIdentifier?: string;
  Permission?: Permission;
  GrantScope?: string;
  ApplicationArn?: string;
}
export interface ListAccessGrantsResult {
  NextToken?: string;
  AccessGrantsList?: ListAccessGrantEntry[];
}
export interface ListAccessGrantsInstancesRequest {
  AccountId?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAccessGrantsInstancesResult {
  NextToken?: string;
  AccessGrantsInstancesList?: ListAccessGrantsInstanceEntry[];
}
export interface ListAccessGrantsLocationsRequest {
  AccountId?: string;
  NextToken?: string;
  MaxResults?: number;
  LocationScope?: string;
}
export interface ListAccessGrantsLocationsResult {
  NextToken?: string;
  AccessGrantsLocationsList?: ListAccessGrantsLocationsEntry[];
}
export interface ListAccessPointsRequest {
  AccountId?: string;
  Bucket?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListAccessPointsResult {
  AccessPointList?: AccessPoint[];
  NextToken?: string;
}
export interface ListAccessPointsForObjectLambdaRequest {
  AccountId?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ObjectLambdaAccessPoint {
  Name: string | undefined;
  ObjectLambdaAccessPointArn?: string;
  Alias?: ObjectLambdaAccessPointAlias;
}
export interface ListAccessPointsForObjectLambdaResult {
  ObjectLambdaAccessPointList?: ObjectLambdaAccessPoint[];
  NextToken?: string;
}
export declare class InvalidNextTokenException extends __BaseException {
  readonly name: "InvalidNextTokenException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidNextTokenException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export interface ListJobsRequest {
  AccountId?: string;
  JobStatuses?: JobStatus[];
  NextToken?: string;
  MaxResults?: number;
}
export declare const OperationName: {
  readonly LambdaInvoke: "LambdaInvoke";
  readonly S3DeleteObjectTagging: "S3DeleteObjectTagging";
  readonly S3InitiateRestoreObject: "S3InitiateRestoreObject";
  readonly S3PutObjectAcl: "S3PutObjectAcl";
  readonly S3PutObjectCopy: "S3PutObjectCopy";
  readonly S3PutObjectLegalHold: "S3PutObjectLegalHold";
  readonly S3PutObjectRetention: "S3PutObjectRetention";
  readonly S3PutObjectTagging: "S3PutObjectTagging";
  readonly S3ReplicateObject: "S3ReplicateObject";
};
export type OperationName = (typeof OperationName)[keyof typeof OperationName];
export interface JobListDescriptor {
  JobId?: string;
  Description?: string;
  Operation?: OperationName;
  Priority?: number;
  Status?: JobStatus;
  CreationTime?: Date;
  TerminationDate?: Date;
  ProgressSummary?: JobProgressSummary;
}
export interface ListJobsResult {
  NextToken?: string;
  Jobs?: JobListDescriptor[];
}
export interface ListMultiRegionAccessPointsRequest {
  AccountId?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListMultiRegionAccessPointsResult {
  AccessPoints?: MultiRegionAccessPointReport[];
  NextToken?: string;
}
export interface ListRegionalBucketsRequest {
  AccountId?: string;
  NextToken?: string;
  MaxResults?: number;
  OutpostId?: string;
}
export interface RegionalBucket {
  Bucket: string | undefined;
  BucketArn?: string;
  PublicAccessBlockEnabled: boolean | undefined;
  CreationDate: Date | undefined;
  OutpostId?: string;
}
export interface ListRegionalBucketsResult {
  RegionalBucketList?: RegionalBucket[];
  NextToken?: string;
}
export interface ListStorageLensConfigurationsRequest {
  AccountId?: string;
  NextToken?: string;
}
export interface ListStorageLensConfigurationEntry {
  Id: string | undefined;
  StorageLensArn: string | undefined;
  HomeRegion: string | undefined;
  IsEnabled?: boolean;
}
export interface ListStorageLensConfigurationsResult {
  NextToken?: string;
  StorageLensConfigurationList?: ListStorageLensConfigurationEntry[];
}
export interface ListStorageLensGroupsRequest {
  AccountId?: string;
  NextToken?: string;
}
export declare const CredentialsFilterSensitiveLog: (obj: Credentials) => any;
export declare const GetDataAccessResultFilterSensitiveLog: (
  obj: GetDataAccessResult
) => any;
